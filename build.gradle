plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }

}

ext {
	set('springAiVersion', "1.0.0-SNAPSHOT")
}

dependencies {
	implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// opencsv
	implementation 'com.opencsv:opencsv:5.9'

	// webclient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.h2database:h2'

	// pinecone-client
	implementation "io.pinecone:pinecone-client:3.0.0"
//	implementation "io.pinecone:pinecone-client:2.1.0"
	implementation 'com.google.protobuf:protobuf-java-util:3.24.2' // JSON 포맷 및 기타 유틸리티 포함

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
